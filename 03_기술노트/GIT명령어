# Visual Studio + Git 연동 기본 명령어 정리 (초보자용)

## 📁 작업 디렉토리로 이동
```bash
cd ~/Desktop/GIT
```
- Git으로 관리할 프로젝트 폴더로 이동합니다.

---

## 🔍 현재 Git 상태 확인
```bash
git status
```
- 어떤 파일이 변경되었는지, 커밋할 내용이 있는지를 확인합니다.

---

## ✅ 변경된 파일 Git에 등록
```bash
git add .
```
- 변경된 모든 파일을 Git에 등록합니다.  
- 특정 파일만 등록하려면 `git add 파일명`으로 입력합니다.

---

## 💬 커밋 메시지를 작성하여 저장
```bash
git commit -m "작업한 내용 요약"
```
- 예: `git commit -m "로그인 기능 구현"`
- Visual Studio 내에서 커밋을 수행한 경우, 이 단계는 생략 가능합니다.

---

## 🚀 원격 저장소(GitHub 등)로 업로드
```bash
git push origin main
```
- 로컬에서 작업한 내용을 원격 저장소의 `main` 브랜치로 업로드합니다.  
- 최초 push 시 인증(아이디, 토큰 등)이 필요할 수 있습니다.

---

## 🔄 원격 저장소에서 최신 내용 가져오기
```bash
git pull origin main
```
- 원격 저장소의 최신 내용을 현재 작업 디렉토리로 불러옵니다.  
- 협업 시 다른 사람의 작업을 받아올 때 사용합니다.

---

## 🆕 새 브랜치 생성 후 이동
```bash
git checkout -b feature/브랜치이름
```
- 새로운 브랜치를 만들고 해당 브랜치로 이동합니다.  
- 예: `git checkout -b feature/join-form`

---

## 🔀 브랜치 병합 (예: 작업 브랜치 → main)
```bash
git checkout main
git merge feature/브랜치이름
```
- 작업이 완료된 브랜치의 내용을 `main` 브랜치에 병합합니다.

---

## 🗑️ 변경 사항 되돌리기 (저장 전)
```bash
git restore 파일명
```
- 변경된 내용을 되돌리고 싶을 때 사용합니다.  
- 아직 커밋하지 않은 파일을 초기 상태로 복원합니다.

---

## ⏪ 최근 커밋 되돌리기
```bash
git reset --soft HEAD~1
```
- 가장 최근 커밋을 취소합니다.  
- 변경된 내용은 그대로 남아 있어 다시 커밋할 수 있습니다.

---

## 🧠 유용한 기타 명령어

```bash
git log --oneline
```
- 커밋 히스토리를 한 줄씩 요약해서 확인할 수 있습니다.

```bash
git branch
```
- 현재 사용 중인 브랜치와 전체 브랜치 목록을 확인합니다.

```bash
git remote -v
```
- 현재 연결된 원격 저장소 목록을 확인합니다.
